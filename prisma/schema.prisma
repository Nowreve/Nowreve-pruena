// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Company {
  id                 String           @id @default(cuid())
  name               String           @db.VarChar(255)
  profile            Profile?
  publications       Publication[]
  subscriptionPlan   SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt

  @@index([subscriptionPlanId])
}

model Profile {
  id          String   @id @default(cuid())
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String   @unique
  description String?  @db.Text
  website     String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Publication {
  id               String     @id @default(cuid())
  title            String     @db.VarChar(255)
  description      String     @db.Text
  maxCollaborators Int
  rewardAmount     Float?
  deadline         DateTime
  photo            String     @db.Text
  video            String?    @db.Text 
  company          Company    @relation(fields: [companyId], references: [id])
  companyId        String
  proposals        Proposal[]
  isPublished      Boolean    @default(false)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  @@index([companyId])
}

model Proposal {
  id            String      @id @default(cuid())
  description   String      @db.Text
  submission    String?     @db.Text
  rating        Float?
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  publication   Publication @relation(fields: [publicationId], references: [id])
  publicationId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([userId])
  @@index([publicationId])
}

enum UserRole {
  CREATOR
  COMPANY
  ADMIN
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique @db.VarChar(255)
  name      String     @db.VarChar(255)
  role      UserRole
  proposals Proposal[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model SubscriptionPlan {
  id              String    @id @default(cuid())
  code            String    @unique @db.VarChar(50)
  name            String    @db.VarChar(255)
  maxPublications Int
  maxProposals    Int
  duration        Int // Duration in days
  price           Decimal   @db.Decimal(10, 2)
  companies       Company[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}
